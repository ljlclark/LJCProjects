<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright(c) Lester J. Clark and Contributors. -->
<!-- Licensed under the MIT License. -->
<!-- ResultGridData.xml -->
<items>
  <ResultGridDataC>
    <summary>
      Initalizes an object instance.
    </summary>
    <!-- param name="grid">The Grid control.</param -->
  </ResultGridDataC>

  <!-- Configuration Methods -->
  <GetGridColumns1>
    <summary>
      Configure the Grid Columns from the DbRequest object definition.
    </summary>
    <param name="dbRequest">The DbRequest object.</param>
    <param name="propertyNames">The included columns.</param>
    <example>
      <code>
        // See the DataManager setup code on the ResultGridData class page.

        using LJCDBClientLib;
        using LJCGridDataLib;
        using LJCDBViewDAL;

        // Configure the Grid Columns from the DbRequest object definition.
        private DbColumns SetGridColumns1(DataManager dataManager)
        {
        DbColumns retValue;

        // Get a View Request.
        var dbRequest = ViewHelper.GetViewRequest("TableName", "ViewDataName");

        // Or Create the Request.
        dbRequest = new DbRequest()
        {
        Columns = dataManager.DataDefinition,
        DataConfigName = dataManager.DataConfigName,
        RequestTypeName = RequestType.Load.ToString(),
        TableName = dataManager.TableName
        };

        // Create the Grid columns.
        var resultGridData = new ResultGridData(LJCDataGridName);
        retValue = resultGridData.GetGridColumns(dbRequest);
        return retValue;
        }
      </code>
    </example>
  </GetGridColumns1>
  <GetGridColumns2>
    <summary>
      Configure the Grid Columns from the Data object properties.
    </summary>
    <param name="dataObject">The Data object.</param>
    <param name="propertyNames">The included columns.</param>
    <example>
      <code>
        // See the DataManager setup code on the ResultGridData class page.

        using LJCDBClientLib;
        using LJCGridDataLib;

        // Configure the Grid Columns from the Data object properties.
        private DbColumns SetGridColumns2(DataManager dataManager)
        {
        DbColumns retValue;

        var dataObject = new ADataObject();

        // Create the Grid columns.
        var resultGridData = new ResultGridData(LJCDataGridName);
        retValue = resultGridData.GetGridColumns(dataObject);
        return retValue;
        }
      </code>
    </example>
  </GetGridColumns2>
  <RemoveGridColumn>
    <summary>
      Removes a grid column.
    </summary>
    <param name="gridColumns"></param>
    <param name="columnName">The column name.</param>
  </RemoveGridColumn>
</items>
