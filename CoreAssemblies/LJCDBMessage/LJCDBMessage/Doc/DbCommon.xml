<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright(c) Lester J. Clark and Contributors. -->
<!-- Licensed under the MIT License. -->
<!-- DbCommon.xml -->
<items>
  <!-- Public Create Column Functions -->
  <RequestColumns>
    <summary>
      Gets Request columns from the baseDefinition using the propertyNames.
    </summary>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        Generally used in the Load() and Retrieve() manager methods to define
        the columns to be retrieved.
      </para>
      <para>
        Defaults to all baseDefinition columns if the propertyNames parameter
        has no values.
      </para>
      <para>
        Creates a DbColumns collection of column definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The DbColumn definitions do not include values.
      </para>
    </remarks>
  </RequestColumns>
  <RequestDataColumns>
    <summary>
      Gets Request Value columns from the baseDefinition using the propertyNames.
    </summary>
    <param name="dataObject">The record object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Generally used in the Add() and Update() manager methods to define the
        columns to be added or updated and the values to use in the add or
        update.
      </para>
      <para>
        This method attempts to default the property names to the dataObject
        ChangedNames property if it exists and the propertyNames parameter has
        no values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The dataObject property names must also match the names in the
        propertyNames parameter and the data value must not be null for the
        data definition to be included.
      </para>
      <para>
        The DbColumn definitions include the dataObject value. The dataObject
        property values are retrieved using reflection.
      </para>
      <para>
        A Data Column is excluded if it is an AutoIncrement column.
      </para>
      <para>
        The value is set to "null" if the original value is "-null".
      </para>
    </remarks>
  </RequestDataColumns>
  <RequestKeys>
    <summary>
      Gets Request Key columns from the baseDefinition using the keyColumns and dbJoins.
    </summary>
    <param name="keyColumns">The Key columns.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="dbJoins">The joins definition.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Generally used in the Delete() Load() and Retrieve() manager methods to
        define the key columns and values.
      </para>
      <para>
        This method allows pre-qualified Join Column names.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the unqualified
        names in the keyColumns parameter.
      </para>
      <para>
        The DbColumn definitions include the original potentially qualified Key
        Column ColumnName and Value.
      </para>
      <para>
        The DbColumn definitions also include the original potentially
        qualified Join Column ColumnName and Value if it is found in the Join
        Column definitions.
      </para>
      <para>
        A valid Join ColumnName is included unmodified if the ColumnName is
        already qualified with a Table Name or Alias. Otherwise the ColumnName
        is qualified with the Join TableName or Alias.
      </para>
    </remarks>
  </RequestKeys>
  <RequestDataKeys>
    <summary>
      Get Request Key columns from the baseDefinition using the keyColumns.
    </summary>
    <param name="keyColumns">The Key record object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Generally used in the Update() manager method to define the update key
        columns and values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the keyColumns parameter.
      </para>
      <para>
        The DbColumn definitions include the Key Column ColumnName and Value.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
    </remarks>
  </RequestDataKeys>
  <RequestLookupKeys>
    <summary>
      Get Request Value Key columns from data properties for the specified column
      property names.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Generally used in the Add() manager method to define the lookup keys
        columns and values to retrieve the row that was just added to the
        database. This allows for retrieving the database assigned values.
      </para>
      <para>
        This method attempts to default the property names to the dataObject
        ChangedNames property if it exists and the propertyNames parameter has
        no values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The dataObject property names must also match the names in the
        propertyNames parameter and the data value must not be null for the
        data definition to be included.
      </para>
      <para>
        The DbColumn definitions include the dataObject value. The dataObject
        property values are retrieved using reflection.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
    </remarks>
  </RequestLookupKeys>

  <!-- Other Public Methods -->
  <AddChangedName>
    <summary>
      Adds a changed property name.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="propertyName">The property name.</param>
  </AddChangedName>
  <ClearChanged>
    <summary>
      Clears the changed names.
    </summary>
    <param name="dataObject">The data object.</param>
  </ClearChanged>
  <GetChangedNames>
    <summary>
      Gets the names of the changed properties.
    </summary>
    <param name="dataObject">The data object.</param>
    <returns>The changed names list.</returns>
  </GetChangedNames>
  <DefaultToChangedNames>
    <summary>
      Gets the ChangedNames if available and propertyNames is null.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="propertyNames">The property names.</param>
  </DefaultToChangedNames>
  <IsChanged>
    <summary>
      Checks if there are changed property names and outputs the names.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="propertyNames">The output property names.</param>
    <returns>true if there are names; otherwise, false.</returns>
  </IsChanged>
  <SetObjectValues1>
    <summary>
      Sets the Data Object property values from the
      &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </summary>
    <param name="dataColumns">
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt; object.
    </param>
    <param name="dataObject">The data object.</param>
  </SetObjectValues1>
  <SetObjectValues2>
    <summary>
      Sets the Data Object property values from the
      &lt;span class="userType"&gt;DbValues&lt;/span&gt;
      object.
    </summary>
    <param name="dataValues">The values object.</param>
    <param name="dataObject">The data object.</param>
  </SetObjectValues2>
</items>