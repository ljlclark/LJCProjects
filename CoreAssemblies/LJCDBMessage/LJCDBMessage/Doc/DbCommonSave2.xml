<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright(c) Lester J. Clark and Contributors. -->
<!-- Licensed under the MIT License. -->
<!-- DbCommonSave2.xml -->
<items>
  <!-- Load and Retrieve Query Columns -->
  <QueryColumns>
    <summary>
      * Gets Query columns from the baseDefinition using the propertyNames.
    </summary>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        Creates Load and Retrieve Query Columns.
      </para>
      <para>
        Defaults to all baseDefinition columns if the propertyNames parameter
        has no values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The DbColumn definitions do not include values.
      </para>
    </remarks>
  </QueryColumns>

  <!-- Add and Update Data Columns -->
  <QueryDataColumns1>
    <summary>
      Gets Query Value columns from the data columns for the specified column
      property names.
    </summary>
    <param name="dataColumns">The DbColumns object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The dataColumns property names must also match the names in the
        propertyNames parameter and the data value must not be null for the
        data definition to be included.
      </para>
      <para>
        The DbColumn definitions include the dataColumns value.
      </para>
      <para>
        A Data Column is excluded if it is an AutoIncrement column.
      </para>
      <para>
        The value is set to "null" if the original value is "-null" or "-".
      </para>
    </remarks>
  </QueryDataColumns1>
  <QueryDataColumns2>
    <summary>
      * Gets Query Value columns from data properties for the specified column
      property names.
    </summary>
    <param name="dataObject">The record object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Creates Add and Update Data Columns.
      </para>
      <para>
        This method attempts to default the property names to the dataObject
        ChangedNames property if it exists and the propertyNames parameter has
        no values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The dataObject property names must also match the names in the
        propertyNames parameter and the data value must not be null for the
        data definition to be included.
      </para>
      <para>
        The DbColumn definitions include the dataObject value. The dataObject
        property values are retrieved using reflection.
      </para>
      <para>
        A Data Column is excluded if it is an AutoIncrement column.
      </para>
      <para>
        The value is set to "null" if the original value is "-null" or "-".
      </para>
    </remarks>
  </QueryDataColumns2>
  <DataColumns1>
    <summary>
      Creates DbColumns values from data columns with the property names.
    </summary>
    <param name="dataColumns">The data columns object.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        A Key Column is excluded if its value is null.
      </para>
      <para>
        A Key Column is excluded if it is an AutoIncrement column.
      </para>
      <para>
        The value is set to "null" if the original value is "-null" or "-".
      </para>
    </remarks>
  </DataColumns1>
  <DataColumns2>
    <summary>
      Creates DbColumns values from data properties with the queryColumns
      property names.
    </summary>
    <param name="dataObject">The record object.</param>
    <param name="queryColumns">The included columns.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        A Key Column is excluded if its value is null.
      </para>
      <para>
        A Key Column is excluded if it is an AutoIncrement column.
      </para>
      <para>
        The value is set to "null" if the original value is "-null" or "-".
      </para>
    </remarks>
  </DataColumns2>

  <!-- Delete, Load and Retrieve Key Columns -->
  <QueryKeys1>
    <summary>
      * Gets the Query Key columns from the baseDefinition using the keyColumns and dbJoins.
    </summary>
    <param name="keyColumns">The Key columns.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="dbJoins">The joins definition.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Syntax: public static DbColumns QueryKeys(DbColumns keyColumns,
        DbColumns baseDefinition)
      </para>
      <para>
        Creates Delete, Load and Retrieve Key Columns.
      </para>
      <para>
        This method allows pre-qualified Join Column names.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the unqualified
        names in the keyColumns parameter.
      </para>
      <para>
        The DbColumn definitions include the original potentially qualified
        Key Column ColumnName and Value.
      </para>
      <para>
        The DbColumn definitions also include the original potentially qualified
        Join Column ColumnName and Value if it is found in the Join Column
        definitions.
      </para>
      <para>
        A valid Join ColumnName is included unmodified if the ColumnName is
        already qualified with a Table Name or Alias. Otherwise the ColumnName
        is qualified with the Join TableName or Alias.
      </para>
    </remarks>
  </QueryKeys1>
  <QueryKeys2>
    <summary>
      Creates &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object from key object properties.
    </summary>
    <param name="keyObject">The record object.</param>
    <param name="dataDefinition">The data definition columns.</param>
    <param name="dbJoins">The joins definition.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the property
        names in the keyObject parameter.
      </para>
      <para>
        The DbColumn definitions include the keyObject property name and value.
      </para>
      <para>
        The DbColumn definitions also include the Join Column ColumnName and
        Value if it is found in the Join Column definitions.
      </para>
      <para>
        The Join Column ColumnName is qualified with the Join TableName or
        Alias.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
    </remarks>
  </QueryKeys2>

  <!-- Add Lookup and Update Key Columns -->
  <QueryDataKeys1>
    <summary>
      * Get the Query Key columns from the keyColumns and baseDefinition.
    </summary>
    <param name="keyColumns">The Key record object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Creates Update Key Columns.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the keyColumns parameter.
      </para>
      <para>
        The DbColumn definitions include the Key Column ColumnName and Value.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
    </remarks>
  </QueryDataKeys1>
  <QueryDataKeys2>
    <summary>
      * Get the Query Value Key columns from the data object for the
      specified column property names.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="baseDefinition">The Base DataDefinition columns.</param>
    <param name="propertyNames">The column property names.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
    <remarks>
      <para>
        Creates Add Lookup Data Key Columns.
      </para>
      <para>
        This method attempts to default the property names to the dataObject
        ChangedNames property if it exists and the propertyNames parameter has
        no values.
      </para>
      <para>
        Creates a DbColumns collection of data definitions from the
        baseDefinition parameter whose PropertyName values match the names in
        the propertyNames parameter.
      </para>
      <para>
        The dataObject property names must also match the names in the
        propertyNames parameter and the data value must not be null for the
        data definition to be included.
      </para>
      <para>
        The DbColumn definitions include the dataObject value. The dataObject
        property values are retrieved using reflection.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
    </remarks>
  </QueryDataKeys2>
  <DataKeys1>
    <summary>
      Creates &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object from key
      &lt;span class="userType"&gt;DbColumns&lt;/span&gt;.
    </summary>
    <param name="keyColumns">The data columns object.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        A Key Column is not created if the property value is null.
      </para>
      <para>
        A Key Column is not created if its PropertyName does not match the
        PropertyName in a Base Definition column.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
      <para>
        The ColumnName is qualified with the Join TableName or Alias if
        it is found in a Join Column definition.
      </para>
    </remarks>
  </DataKeys1>
  <DataKeys2>
    <summary>
      Creates &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object from data properties for the specified column list.
    </summary>
    <param name="dataObject">The data record object.</param>
    <param name="queryColumns">The data definition columns.</param>
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      collection.
    </returns>
    <remarks>
      <para>
        A Key Column is not created if the property value is null.
      </para>
      <para>
        A Key Column is not created if its PropertyName does not match the
        PropertyName in a Base Definition column.
      </para>
      <para>
        A Key Column is not created if it is an AutoIncrement column, the
        value equals "0" or it is an invalid DateTime.
      </para>
      <para>
        The ColumnName is qualified with the Join TableName or Alias if
        it is found in a Join Column definition.
      </para>
    </remarks>
  </DataKeys2>

  <!-- Other Public Methods -->
  <ClearChanged>
    <summary>
      Clears the changed names.
    </summary>
    <param name="dataObject">The data object.</param>
  </ClearChanged>
  <GetChangedNames>
    <summary>
      Gets the names of the changed properties.
    </summary>
    <param name="dataObject">The data object.</param>
    <returns>The changed names list.</returns>
  </GetChangedNames>
  <GetDefaultPropertyNames>
    <summary>
      Gets the ChangedNames if available and propertyNames is null.
    </summary>
    <param name="dataObject">The data object.</param>
    <param name="propertyNames">The column names.</param>
  </GetDefaultPropertyNames>
  <SetObjectValues1>
    <summary>
      Sets the Data Object property values from the
      &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </summary>
    <param name="dataColumns">
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt; object.
    </param>
    <param name="dataObject">The data object.</param>
  </SetObjectValues1>
  <SetObjectValues2>
    <summary>
      Sets the Data Object property values from the
      &lt;span class="userType"&gt;DbValues&lt;/span&gt;
      object.
    </summary>
    <param name="dbValues">The values object.</param>
    <param name="dataObject">The data object.</param>
  </SetObjectValues2>
  <SetObjectValues3>
    <summary>
      Sets the Data Object property values from the result message.
    </summary>
    <param name="resultMessage">The result message.</param>
    <param name="dataObject">The data object.</param>
  </SetObjectValues3>
</items>