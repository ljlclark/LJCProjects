<?xml version="1.0" encoding="utf-8" ?>
<!-- AppSettings.xml -->
<items>
  <AppSettingsC>
    <summary>
      Initializes an object instance.
    </summary>
    <param name="fileSpec">The Configuration file specification.</param>
    <example>
      <code>
        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
      </code>
    </example>
  </AppSettingsC>
  
  <!-- Get Setting Types -->
  <GetBool>
    <summary>
      Gets the bool value of the specified setting. (E)
    </summary>
    <param name="keyName">The setting key name.</param>
    <returns>The bool setting value.</returns>
    <example>
      <code>
        // App.Config file.
        // &lt;configuration&gt;
        //   &lt;appSettings&gt;
        //     &lt;add key="UseLocal" value="true" /&gt;
        //   &lt;/appSettings&gt;
        // &lt;/configuration&gt;

        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
        bool useLocal = appSettings.GetBool("UseLocal");
      </code>
    </example>
  </GetBool>
  <GetColor>
    <summary>
      Gets the Color value of the specified setting. (E)
    </summary>
    <param name="keyName">The setting key name.</param>
    <param name="defaultColor">The default color.</param>
    <returns>The Color setting value.</returns>
    <example>
      <code>
        // App.Config file.
        // &lt;configuration&gt;
        //   &lt;appSettings&gt;
        //     &lt;add key="BeginColor" value="AliceBlue" /&gt;
        //   &lt;/appSettings&gt;
        // &lt;/configuration&gt;

        using System.Drawing;
        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
        Color beginColor = appSettings.GetColor("BeginColor", Color.AliceBlue);
      </code>
    </example>
  </GetColor>
  <GetColorFromRGBString>
    <summary>
      Gets a Color from an RGB string. (E)
    </summary>
    <param name="rgbText">The RGB text.</param>
    <returns>The Color value.</returns>
    <example>
      <code>
        // App.Config file.
        // &lt;configuration&gt;
        //   &lt;appSettings&gt;
        //     &lt;add key="EndColor" value="255,255,255" /&gt;
        //   &lt;/appSettings&gt;
        // &lt;/configuration&gt;

        using System.Drawing;
        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
        Color endColor;
        endColor = appSettings.GetColorFromRGBString("EndColor");
      </code>
    </example>
  </GetColorFromRGBString>
  <GetColorValue>
    <summary>
      Gets an integer color value from a string. (E)
    </summary>
    <param name="text">The color string text.</param>
    <returns>The integer color value.</returns>
    <example>
      <code>
        using System.Drawing;
        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
        Color white = appSettings.GetColorValue("255,255,255");
      </code>
    </example>
  </GetColorValue>
  <GetString>
    <summary>
      Get the string value of the specified setting. (E)
    </summary>
    <param name="keyName">The setting key name.</param>
    <param name="allowMissingValue">
      Indicates if a missing value throws an exception.
    </param>
    <example>
      <code>
        // App.Config file.
        // &lt;configuration&gt;
        //   &lt;appSettings&gt;
        //     &lt;add key="DataConfigName" value="AppTables" /&gt;
        //   &lt;/appSettings&gt;
        // &lt;/configuration&gt;

        using System.Drawing;
        using LJCNetCommon;

        var appSettings = new AppSettings("AppName.exe.config");
        string dataConfigName = appSettings.GetString("DataConfigName");
      </code>
    </example>
    <returns>The string setting value.</returns>
  </GetString>
</items>