<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) Lester J. Clark 2021,2022 - All Rights Reserved -->
<items>
  <ExampleIList>
    <summary>
      Represents a collection of objects that can be individually accessed
      by index.
    </summary>
  </ExampleIList>
  
  <!-- Indexers -->
  <this>
    <summary>
      Gets or sets the element at the specified index.
    </summary>
    <param name="index">The zero-based index of the element to get or set.</param>
    <returns>The collection element.</returns>
  </this>

  <!-- Public Methods -->
  <Count>
    <summary>
      Gets the number of elements contained in the ICollection&lt;T&gt;.
    </summary>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </Count>
  <IsReadOnly>
    <summary>
      Gets a value indicating whether the ICollection&lt;T&gt; is read-only.
    </summary>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </IsReadOnly>
  <Add>
    <summary>
      Adds an item to the ICollection&lt;T&gt;.
    </summary>
    <param name="item">The object to add to the ICollection&lt;T&gt;.</param>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </Add>
  <Clear>
    <summary>
      Removes all items from the ICollection&lt;T&gt;.
    </summary>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </Clear>
  <Contains>
    <summary>
      Determines whether the ICollection&lt;T&gt; contains a specific value.
    </summary>
    <param name="item">The object to locate in the ICollection&lt;T&gt;.</param>
    <returns>true if item is found in the ICollection&lt;T&gt;; otherwise, false.</returns>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </Contains>
  <CopyTo>
    <summary>
      Copies the elements of the ICollection&lt;T&gt; to an Array, starting at a
      particular Array index.
    </summary>
    <param name="array">
      The one-dimensional Array that is the destination of the elements copied
      from ICollection&lt;T&gt;. The Array must have zero-based indexing.
    </param>
    <param name="arrayIndex">
      The zero-based index in array at which copying begins.
    </param>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </CopyTo>
  <GetEnumerator1>
    <summary>
      Returns an enumerator that iterates through a collection.
    </summary>
    <returns>
      An IEnumerator object that can be used to iterate through the collection.
    </returns>
    <remarks>Inherited from IEnumerable.</remarks>
  </GetEnumerator1>
  <IndexOf>
    <summary>
      Determines the index of a specific item in the IList&lt;T&gt;.
    </summary>
    <param name="item">The object to locate in the IList&lt;T&gt;.</param>
    <returns>The index of item if found in the list; otherwise, -1.</returns>
  </IndexOf>
  <Insert>
    <summary>
      Inserts an item to the IList&lt;T&gt; at the specified index.
    </summary>
    <param name="index">
      The zero-based index at which item should be inserted.
    </param>
    <param name="item">The object to insert into the IList&lt;T&gt;.</param>
  </Insert>
  <Remove>
    <summary>
      Removes the first occurrence of a specific object from the ICollection&lt;T&gt;.
    </summary>
    <param name="item">The object to remove from the ICollection&lt;T&gt;.</param>
    <returns>
      true if item was successfully removed from the ICollection&lt;T&gt;;
      otherwise, false. This method also returns false if item is not found
      in the original ICollection&lt;T&gt;.
    </returns>
    <remarks>Inherited from ICollection&lt;T&gt;.</remarks>
  </Remove>
  <RemoveAt>
    <summary>
      Removes the IList&lt;T&gt; item at the specified index.
    </summary>
    <param name="index">The zero-based index of the item to remove.</param>
  </RemoveAt>
</items>