<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) Lester J. Clark 2021,2022 - All Rights Reserved -->
<items>
  <DbResult>
    <summary>
      Represents a Request result.
      (R)
    </summary>
    <remarks>
      <para>
        The &lt;span class="userType"&gt;DbResult&lt;/span&gt;
        object contains the RequestTypeName and TableName that were in the
        original &lt;span class="userType"&gt;DbQuery&lt;/span&gt;
        request.
      </para>
      <para>
        It also contains the
        &lt;span class="userType"&gt;DbRecords&lt;/span&gt;
        object with the result data.
      </para>
    </remarks>
  </DbResult>
  <DeserializeMessage>
    <summary>
      Deserializes the
      &lt;span class="userType"&gt;DbResult&lt;/span&gt;
      message.
    </summary>
    <param name="result">The result message.</param>
    <returns>
      The &lt;span class="userType"&gt;DbResult&lt;/span&gt;
      object.
    </returns>
  </DeserializeMessage>
  <HasColumns1>
    <summary>
      Checks if the result has Columns.
    </summary>
    <param name="dbResult">The DbResult object.</param>
    <returns>True if there are columns, otherwise false.</returns>
  </HasColumns1>
  <HasData>
    <summary>
      Checks if the result has Columns and Rows.
    </summary>
    <param name="dbResult">The DbResult object.</param>
    <returns>True if there are columns and rows, otherwise false.</returns>
  </HasData>
  <HasRows1>
    <summary>
      Checks if the result has Rows.
    </summary>
    <param name="dbResult">The DbResult object.</param>
    <returns>True if there are rows, otherwise false.</returns>
  </HasRows1>
  <DbResultC1>
    <summary>
      Initializes an object instance with the DbRequest object.
    </summary>
    <param name="dbRequest">
      The &lt;span class="userType"&gt;DbQuery&lt;/span&gt;
      object.
    </param>
  </DbResultC1>
  <DbResultC2>
    <summary>
      Initializes an object instance with the supplied values.
    </summary>
    <param name="requestTypeName">The request type name.</param>
    <param name="tableName">The table name.</param>
    <param name="schemaName">The schema name.</param>
    <param name="procedureName">The procedure name.</param>
  </DbResultC2>
  
  <!-- Methods -->
  <Serialize1>
    <summary>
      Serializes the object and returns the serialized string.
    </summary>
    <returns>The serialized string.</returns>
  </Serialize1>
  <Serialize2>
    <summary>
      Serialize the object to the specified file.
    </summary>
    <param name="fileSpec">The file specification.</param>
  </Serialize2>
  <GetValueColumns>
    <summary>
      Get &lt;span class="userType"&gt;DbValues&lt;/span&gt;
      from result records.
    </summary>
    <param name="dbValues">The DbValues object.</param>"
    <returns>
      The &lt;span class="userType"&gt;DbColumns&lt;/span&gt;
      object.
    </returns>
  </GetValueColumns>
  <HasColumns2>
    <summary>
      Checks if the result has Columns.
    </summary>
    <returns>True if there are columns, otherwise false.</returns>
  </HasColumns2>
  <HasRows2>
    <summary>
      Checks if the result has Rows.
    </summary>
    <returns>True if there are rows, otherwise false.</returns>
  </HasRows2>
  <SetColumns>
    <summary>
      Sets the Columns property from the principle and join columns.
    </summary>
    <param name="dbColumns">The principle columns.</param>
    <param name="dbJoins">The joins.</param>
  </SetColumns>
  <SetData>
    <summary>
      Sets the result records from the
      &lt;span class="userType"&gt;DataTable&lt;/span&gt; and
      &lt;span class="userType"&gt;DbRequest&lt;/span&gt; objects.
    </summary>
    <param name="dataTable">The data table.</param>
    <param name="dbRequest">
      The &lt;span class="userType"&gt;DBQuery&lt;/span&gt;
      object.
    </param>
  </SetData>
  <SetRows>
    <summary>
      Sets the result records from the DataTable, principle values and join values.
    </summary>
    <param name="dataTable">The data table.</param>
    <param name="dbColumns">The principle columns.</param>
    <param name="dbJoins">The joins.</param>
    <remarks>
      <para>
        Creates a
        &lt;span class="userType"&gt;DbRecords&lt;/span&gt;
        collection of
        &lt;span class="userType"&gt;DbValues&lt;/span&gt;
        objects from a
        &lt;span class="userType"&gt;DataTable&lt;/span&gt;.
      </para>
    </remarks>
  </SetRows>
  <GetRowValues>
    <summary>
      Gets the result values from the data row.
    </summary>
    <param name="dbColumns">The columns collection.</param>
    <param name="dataRow">
      The &lt;span class="userType"&gt;DataRow&lt;/span&gt;
      object.
    </param>
    <returns>The result values.</returns>
    <remarks>
      <para>
        Combines the required column definition values and
        &lt;span class="userType"&gt;DataRow&lt;/span&gt;
        data values into a
        &lt;span class="userType"&gt;DbValues&lt;/span&gt;
        collection.
      </para>
    </remarks>
  </GetRowValues>
  <AddJoinRowValues>
    <summary>
      Adds the join values.
    </summary>
    <param name="dbValues">The values object.</param>
    <param name="dataRow">
      The &lt;span class="userType"&gt;DataRow&lt;/span&gt;
      object.
    </param>
    <param name="dbJoins">The joins.</param>
  </AddJoinRowValues>
</items>
