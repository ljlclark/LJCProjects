<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright (c) Lester J. Clark 2021,2022 - All Rights Reserved -->
<items>
  <DbConditionSet>
    <summary>
      Represents the conditions and properties.
      (E)
    </summary>
    <example>
      <code>
        using LJCDBMessage;
        
        // Initialize a Filter object.
        DbFilter dbFilter = new DbFilter();
        
        // The BooleanOperator seperatates each Condition statement.
        // The BooleanOperator can be "and" or "or". If not specified, it
        // defaults to "and".
        DbConditionSet conditionSet = dbFilter.ConditionSet;
        conditionSet.BooleanOperator = "and";
        
        // Note that a condition without a specified ComparisonOperator defaults
        // to the equals "=" comparison operator.
        DbConditions conditions = conditionSet.Conditions;
        conditions.Add("Street", "'First Street'", "=");
        conditions.Add("City", "'Lake Mary'");
        conditions.Add("PostalCode", "'32746'");
        
        // These conditions result in this Where clause.
        // where ((Street = 'First Street' and City = 'Lake Mary'
        //   and PostalCode = '32746'))
        
        DbFilter secondFilter = new DbFilter
        {
          BooleanOperator = "or"
        };
        DbConditions secondConditions = secondFilter.ConditionSet.Conditions;
        secondConditions.Add("Street", "'Somewhere%'", "like");
        dbFilters.Add(secondFilter);
        
        // where ((Street = 'First Street' and City = 'Lake Mary'
        //    and PostalCode = '32746'))
        //  or ((Street like 'Somewhere%'))
      </code>
    </example>
  </DbConditionSet>
  <DbConditionSetC>
    <summary>
      Initializes an object instance.
    </summary>
  </DbConditionSetC>
  <Clone>
    <summary>
      Creates and returns a clone of the object.
    </summary>
    <returns>The new cloned value.</returns>
  </Clone>
</items>
